/* 02_continue.wb

   Parse a single isolated continue statement. This is also 
   two tokens (CONTINUE, SEMI) like the break statement so
   write a rule that looks just like that.

   The new feature is that your parser must now recognize both
   "break" and "continue."  To do this, you're going to use
   predictive parsing where you peek at the upcoming token and
   make a decision. Write a rule "parse_statement()" like this:

   def parse_statement(tokens):
       if tokens.peek('BREAK'):
           return parse_break_statement(tokens)
       elif tokens.peek('CONTINUE'):
           return parse_continue_statemen(tokens)
       else:
           raise SyntaxError("Expected a statement")

Now make sure your parser can parse both the 01_break.wb file and
this file.
*/

continue;
